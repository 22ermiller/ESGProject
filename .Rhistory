equity_mean_mod <- readRDS("models/equity_mean_mod.rds")
equity_mean_mod_resids <- readRDS("models/mean_mod_resids.rds")
# Read in functions
source("functions.R")
n_years <- 40
n_sims <- 1000
cpi_df <- read_csv("data/cpi.csv") |>
filter(date >= "2010-01-01") |> # only dates from 2010 onwards
mutate(lagged_cpi = lag(cpi, n = 1)) |>
mutate(log_dif_cpi = log(cpi) - log(lagged_cpi)) |>
filter(!is.na(log_dif_cpi))
ir3mo_df <- read_csv("data/ir3mo.csv") |>
mutate(lagged_rate = lag(rate, n = 1),
rate_rmmean = rate - mean(rate, na.rm = TRUE)) |>
mutate(dif_rate = rate - lagged_rate,
log_dif_rate = log(rate) - log(lagged_rate))
full_ir_df <- read_csv("data/full_ir.csv") |>
mutate(across(three_month:thirty_year, ~./100)) |>
mutate(slope = thirty_year - three_month,
curve = three_month + thirty_year - (2*ten_year))
cpi_sim <- cpi_single_sim(cpi_mod, n_years*12)
cpi_sims <- cpi_multiple_sims(cpi_mod, n_years*12, n_sims)
mean_3mo_ir <- get_average_3mo_rate(ir3mo_df)
ir3mo_sim <- ir3mo_single_sim(ir3mo_mod, n_years*12, cpi_sim, mean_3mo_ir)
ir3mo_sims <- ir3mo_multiple_sims(ir3mo_mod, n_years*12, n_sims, cpi_sims, mean_3mo_ir)
slope_curve_vals <- get_final_slope_curve_vals(full_ir_df)
yield_curve_sim <- yield_single_sim(yield_var_mod, yield_lms, n_years*12, ir3mo_sim, slope_curve_vals)
equity_rs_mod <- fit_equity_rs_model(equity_mean_mod_resids)
equity_sim <- equity_single_sim(equity_mean_mod, equity_rs_mod, n_years*12, cpi_sim, ir3mo_sim)
equity_sims <- equity_multiple_sims(equity_mean_mod, equity_rs_mod, n_years*12, n_sims, cpi_sims, ir3mo_sims)
dollar_value <- cumprod(exp(cpi_sim))
equity_gross <- exp(equity_sim)
plot(equity_gross, type = "l")
mean(equity_gross)
starting_value <- 100
portfolio_value <- rep(NA, length(dollar_value))
for (i in 1:length(portfolio_value)) {
if (i ==1) {
portfolio_value[i] <- (starting_value - dollar_value[i])*equity_gross[i]
}
else {
portfolio_value[i] <- (portfolio_value[i-1] - dollar_value[i])*equity_gross[i]
}
}
plot(portfolio_value, type = "l")
equity_gross <- exp(equity_sims)
sim_means <- rowMeans(equity_gross)
matrix_cpi_sims <- do.call(cbind, cpi_sims)
price_level <- apply(matrix_cpi_sims, 1, function(x) cumprod(exp(x)))
# Set starting portfolio value
starting_value <- 100
withdrawal_amt <- starting_value*(.03/12)
T <- ncol(equity_gross)
n_sims <- nrow(equity_gross)
portfolio_value <- matrix(NA, nrow = n_sims, ncol = T)
# Period 1
portfolio_value[, 1] <- (starting_value - price_level[, 1]*withdrawal_amt) * equity_gross[, 1]
# Remaining periods
for (t in 2:T) {
portfolio_value[, t] <- (portfolio_value[, t-1] - price_level[, t]*withdrawal_amt) * equity_gross[, t]
}
portfolio_value <- pmax(portfolio_value, 0)
port_avg <- colMeans(portfolio_value)
port_ci <- apply(portfolio_value, 2, quantile, probs = c(.05, .95))
plot(port_avg, type = "l", ylim = c(0, 4000), main = "Portfolio Value", xlab = "Month")
lines(port_ci[2,], col = "red", lty = 2)
lines(port_ci[1,], col = "red", lty = 2)
portfolio_df <- as_tibble(portfolio_value) %>%
mutate(success = ifelse(.[[ncol(.)]] > 0, TRUE, FALSE))
mean(portfolio_df$success)
withdrawal_amt <- starting_value*(.02/12)
T <- ncol(equity_gross)
n_sims <- nrow(equity_gross)
portfolio_value <- matrix(NA, nrow = n_sims, ncol = T)
# Period 1
portfolio_value[, 1] <- (starting_value - price_level[, 1]*withdrawal_amt) * equity_gross[, 1]
# Remaining periods
for (t in 2:T) {
portfolio_value[, t] <- (portfolio_value[, t-1] - price_level[, t]*withdrawal_amt) * equity_gross[, t]
}
portfolio_value <- pmax(portfolio_value, 0)
port_avg <- colMeans(portfolio_value)
port_ci <- apply(portfolio_value, 2, quantile, probs = c(.05, .95))
plot(port_avg, type = "l", ylim = c(0, 4000), main = "Portfolio Value", xlab = "Month")
lines(port_ci[2,], col = "red", lty = 2)
lines(port_ci[1,], col = "red", lty = 2)
portfolio_df <- as_tibble(portfolio_value) %>%
mutate(success = ifelse(.[[ncol(.)]] > 0, TRUE, FALSE))
mean(portfolio_df$success)
n_sims <- 10000
cpi_df <- read_csv("data/cpi.csv") |>
filter(date >= "2010-01-01") |> # only dates from 2010 onwards
mutate(lagged_cpi = lag(cpi, n = 1)) |>
mutate(log_dif_cpi = log(cpi) - log(lagged_cpi)) |>
filter(!is.na(log_dif_cpi))
ir3mo_df <- read_csv("data/ir3mo.csv") |>
mutate(lagged_rate = lag(rate, n = 1),
rate_rmmean = rate - mean(rate, na.rm = TRUE)) |>
mutate(dif_rate = rate - lagged_rate,
log_dif_rate = log(rate) - log(lagged_rate))
full_ir_df <- read_csv("data/full_ir.csv") |>
mutate(across(three_month:thirty_year, ~./100)) |>
mutate(slope = thirty_year - three_month,
curve = three_month + thirty_year - (2*ten_year))
cpi_sim <- cpi_single_sim(cpi_mod, n_years*12)
cpi_sims <- cpi_multiple_sims(cpi_mod, n_years*12, n_sims)
mean_3mo_ir <- get_average_3mo_rate(ir3mo_df)
ir3mo_sim <- ir3mo_single_sim(ir3mo_mod, n_years*12, cpi_sim, mean_3mo_ir)
ir3mo_sims <- ir3mo_multiple_sims(ir3mo_mod, n_years*12, n_sims, cpi_sims, mean_3mo_ir)
equity_rs_mod <- fit_equity_rs_model(equity_mean_mod_resids)
equity_sim <- equity_single_sim(equity_mean_mod, equity_rs_mod, n_years*12, cpi_sim, ir3mo_sim)
equity_sims <- equity_multiple_sims(equity_mean_mod, equity_rs_mod, n_years*12, n_sims, cpi_sims, ir3mo_sims)
dollar_value <- cumprod(exp(cpi_sim))
equity_gross <- exp(equity_sim)
plot(equity_gross, type = "l")
mean(equity_gross)
starting_value <- 100
portfolio_value <- rep(NA, length(dollar_value))
for (i in 1:length(portfolio_value)) {
if (i ==1) {
portfolio_value[i] <- (starting_value - dollar_value[i])*equity_gross[i]
}
else {
portfolio_value[i] <- (portfolio_value[i-1] - dollar_value[i])*equity_gross[i]
}
}
plot(portfolio_value, type = "l")
equity_gross <- exp(equity_sims)
sim_means <- rowMeans(equity_gross)
matrix_cpi_sims <- do.call(cbind, cpi_sims)
price_level <- apply(matrix_cpi_sims, 1, function(x) cumprod(exp(x)))
# Set starting portfolio value
starting_value <- 100
withdrawal_amt <- starting_value*(.02/12)
T <- ncol(equity_gross)
n_sims <- nrow(equity_gross)
portfolio_value <- matrix(NA, nrow = n_sims, ncol = T)
# Period 1
portfolio_value[, 1] <- (starting_value - price_level[, 1]*withdrawal_amt) * equity_gross[, 1]
# Remaining periods
for (t in 2:T) {
portfolio_value[, t] <- (portfolio_value[, t-1] - price_level[, t]*withdrawal_amt) * equity_gross[, t]
}
portfolio_value <- pmax(portfolio_value, 0)
port_avg <- colMeans(portfolio_value)
port_ci <- apply(portfolio_value, 2, quantile, probs = c(.05, .95))
plot(port_avg, type = "l", ylim = c(0, 4000), main = "Portfolio Value", xlab = "Month")
lines(port_ci[2,], col = "red", lty = 2)
lines(port_ci[1,], col = "red", lty = 2)
portfolio_df <- as_tibble(portfolio_value) %>%
mutate(success = ifelse(.[[ncol(.)]] > 0, TRUE, FALSE))
mean(portfolio_df$success)
n_years <- 40
n_sims <- 100
cpi_df <- read_csv("data/cpi.csv") |>
filter(date >= "2010-01-01") |> # only dates from 2010 onwards
mutate(lagged_cpi = lag(cpi, n = 1)) |>
mutate(log_dif_cpi = log(cpi) - log(lagged_cpi)) |>
filter(!is.na(log_dif_cpi))
ir3mo_df <- read_csv("data/ir3mo.csv") |>
mutate(lagged_rate = lag(rate, n = 1),
rate_rmmean = rate - mean(rate, na.rm = TRUE)) |>
mutate(dif_rate = rate - lagged_rate,
log_dif_rate = log(rate) - log(lagged_rate))
full_ir_df <- read_csv("data/full_ir.csv") |>
mutate(across(three_month:thirty_year, ~./100)) |>
mutate(slope = thirty_year - three_month,
curve = three_month + thirty_year - (2*ten_year))
cpi_sim <- cpi_single_sim(cpi_mod, n_years*12)
cpi_sims <- cpi_multiple_sims(cpi_mod, n_years*12, n_sims)
final_cpi_val <- get_last_quarterly_cpi_val(cpi_df)
mean_3mo_ir <- get_average_3mo_rate(ir3mo_df)
ir3mo_sim <- ir3mo_single_sim(ir3mo_mod, n_years*12, cpi_sim, mean_3mo_ir)
ir3mo_sims <- ir3mo_multiple_sims(ir3mo_mod, n_years*12, n_sims, cpi_sims, mean_3mo_ir)
equity_rs_mod <- fit_equity_rs_model(equity_mean_mod_resids)
equity_sim <- equity_single_sim(equity_mean_mod, equity_rs_mod, n_years*12, cpi_sim, ir3mo_sim)
equity_sims <- equity_multiple_sims(equity_mean_mod, equity_rs_mod, n_years*12, n_sims, cpi_sims, ir3mo_sims)
dollar_value <- cumprod(exp(cpi_sim))
equity_gross <- exp(equity_sim)
plot(equity_gross, type = "l")
mean(equity_gross)
starting_value <- 100
portfolio_value <- rep(NA, length(dollar_value))
for (i in 1:length(portfolio_value)) {
if (i ==1) {
portfolio_value[i] <- (starting_value - dollar_value[i])*equity_gross[i]
}
else {
portfolio_value[i] <- (portfolio_value[i-1] - dollar_value[i])*equity_gross[i]
}
}
plot(portfolio_value, type = "l")
equity_gross <- exp(equity_sims)
sim_means <- rowMeans(equity_gross)
matrix_cpi_sims <- do.call(cbind, cpi_sims)
price_level <- apply(matrix_cpi_sims, 1, function(x) cumprod(exp(x)))
# Set starting portfolio value
starting_value <- 100
withdrawal_amt <- starting_value*(.02/12)
T <- ncol(equity_gross)
n_sims <- nrow(equity_gross)
portfolio_value <- matrix(NA, nrow = n_sims, ncol = T)
# Period 1
portfolio_value[, 1] <- (starting_value - price_level[, 1]*withdrawal_amt) * equity_gross[, 1]
# Remaining periods
for (t in 2:T) {
portfolio_value[, t] <- (portfolio_value[, t-1] - price_level[, t]*withdrawal_amt) * equity_gross[, t]
}
portfolio_value <- pmax(portfolio_value, 0)
port_avg <- colMeans(portfolio_value)
port_ci <- apply(portfolio_value, 2, quantile, probs = c(.05, .95))
plot(port_avg, type = "l", ylim = c(0, 4000), main = "Portfolio Value", xlab = "Month")
lines(port_ci[2,], col = "red", lty = 2)
lines(port_ci[1,], col = "red", lty = 2)
portfolio_df <- as_tibble(portfolio_value) %>%
mutate(success = ifelse(.[[ncol(.)]] > 0, TRUE, FALSE))
mean(portfolio_df$success)
price_level
View(price_level)
matrix_cpi_sims <- do.call(rbind, cpi_sims)
price_level <- apply(matrix_cpi_sims, 1, function(x) cumprod(exp(x)))
View(price_level)
matrix_cpi_sims <- do.call(rbind, cpi_sims)
View(cpi_sims)
View(matrix_cpi_sims)
matrix_cpi_sims <- do.call(rbind, cpi_sims)
View(matrix_cpi_sims)
price_level <- apply(matrix_cpi_sims, 1, function(x) cumprod(exp(x)))
View(price_level)
View(matrix_cpi_sims)
equity_gross <- exp(equity_sims)
sim_means <- rowMeans(equity_gross)
matrix_cpi_sims <- do.call(rbind, cpi_sims)
price_level <- t(apply(matrix_cpi_sims, 1, function(x) cumprod(exp(x))))
View(price_level)
# Set starting portfolio value
starting_value <- 100
withdrawal_amt <- starting_value*(.02/12)
T <- ncol(equity_gross)
n_sims <- nrow(equity_gross)
portfolio_value <- matrix(NA, nrow = n_sims, ncol = T)
# Period 1
portfolio_value[, 1] <- (starting_value - price_level[, 1]*withdrawal_amt) * equity_gross[, 1]
# Remaining periods
for (t in 2:T) {
portfolio_value[, t] <- (portfolio_value[, t-1] - price_level[, t]*withdrawal_amt) * equity_gross[, t]
}
portfolio_value <- pmax(portfolio_value, 0)
port_avg <- colMeans(portfolio_value)
port_ci <- apply(portfolio_value, 2, quantile, probs = c(.05, .95))
plot(port_avg, type = "l", ylim = c(0, 4000), main = "Portfolio Value", xlab = "Month")
lines(port_ci[2,], col = "red", lty = 2)
lines(port_ci[1,], col = "red", lty = 2)
portfolio_df <- as_tibble(portfolio_value) %>%
mutate(success = ifelse(.[[ncol(.)]] > 0, TRUE, FALSE))
mean(portfolio_df$success)
n_years <- 40
n_sims <- 1000
cpi_df <- read_csv("data/cpi.csv") |>
filter(date >= "2010-01-01") |> # only dates from 2010 onwards
mutate(lagged_cpi = lag(cpi, n = 1)) |>
mutate(log_dif_cpi = log(cpi) - log(lagged_cpi)) |>
filter(!is.na(log_dif_cpi))
ir3mo_df <- read_csv("data/ir3mo.csv") |>
mutate(lagged_rate = lag(rate, n = 1),
rate_rmmean = rate - mean(rate, na.rm = TRUE)) |>
mutate(dif_rate = rate - lagged_rate,
log_dif_rate = log(rate) - log(lagged_rate))
full_ir_df <- read_csv("data/full_ir.csv") |>
mutate(across(three_month:thirty_year, ~./100)) |>
mutate(slope = thirty_year - three_month,
curve = three_month + thirty_year - (2*ten_year))
cpi_sim <- cpi_single_sim(cpi_mod, n_years*12)
cpi_sims <- cpi_multiple_sims(cpi_mod, n_years*12, n_sims)
mean_3mo_ir <- get_average_3mo_rate(ir3mo_df)
ir3mo_sim <- ir3mo_single_sim(ir3mo_mod, n_years*12, cpi_sim, mean_3mo_ir)
ir3mo_sims <- ir3mo_multiple_sims(ir3mo_mod, n_years*12, n_sims, cpi_sims, mean_3mo_ir)
equity_rs_mod <- fit_equity_rs_model(equity_mean_mod_resids)
equity_sim <- equity_single_sim(equity_mean_mod, equity_rs_mod, n_years*12, cpi_sim, ir3mo_sim)
equity_sims <- equity_multiple_sims(equity_mean_mod, equity_rs_mod, n_years*12, n_sims, cpi_sims, ir3mo_sims)
dollar_value <- cumprod(exp(cpi_sim))
equity_gross <- exp(equity_sim)
plot(equity_gross, type = "l")
mean(equity_gross)
starting_value <- 100
portfolio_value <- rep(NA, length(dollar_value))
for (i in 1:length(portfolio_value)) {
if (i ==1) {
portfolio_value[i] <- (starting_value - dollar_value[i])*equity_gross[i]
}
else {
portfolio_value[i] <- (portfolio_value[i-1] - dollar_value[i])*equity_gross[i]
}
}
plot(portfolio_value, type = "l")
equity_gross <- exp(equity_sims)
sim_means <- rowMeans(equity_gross)
matrix_cpi_sims <- do.call(rbind, cpi_sims)
price_level <- t(apply(matrix_cpi_sims, 1, function(x) cumprod(exp(x))))
# Set starting portfolio value
starting_value <- 100
withdrawal_amt <- starting_value*(.02/12)
T <- ncol(equity_gross)
n_sims <- nrow(equity_gross)
portfolio_value <- matrix(NA, nrow = n_sims, ncol = T)
View(price_level)
# Period 1
portfolio_value[, 1] <- (starting_value - price_level[, 1]*withdrawal_amt) * equity_gross[, 1]
# Remaining periods
for (t in 2:T) {
portfolio_value[, t] <- (portfolio_value[, t-1] - price_level[, t]*withdrawal_amt) * equity_gross[, t]
}
portfolio_value <- pmax(portfolio_value, 0)
port_avg <- colMeans(portfolio_value)
port_ci <- apply(portfolio_value, 2, quantile, probs = c(.05, .95))
plot(port_avg, type = "l", ylim = c(0, 4000), main = "Portfolio Value", xlab = "Month")
lines(port_ci[2,], col = "red", lty = 2)
lines(port_ci[1,], col = "red", lty = 2)
portfolio_df <- as_tibble(portfolio_value) %>%
mutate(success = ifelse(.[[ncol(.)]] > 0, TRUE, FALSE))
mean(portfolio_df$success)
withdrawal_amt <- starting_value*(.03/12)
T <- ncol(equity_gross)
n_sims <- nrow(equity_gross)
portfolio_value <- matrix(NA, nrow = n_sims, ncol = T)
# Period 1
portfolio_value[, 1] <- (starting_value - price_level[, 1]*withdrawal_amt) * equity_gross[, 1]
# Remaining periods
for (t in 2:T) {
portfolio_value[, t] <- (portfolio_value[, t-1] - price_level[, t]*withdrawal_amt) * equity_gross[, t]
}
portfolio_value <- pmax(portfolio_value, 0)
port_avg <- colMeans(portfolio_value)
port_ci <- apply(portfolio_value, 2, quantile, probs = c(.05, .95))
plot(port_avg, type = "l", ylim = c(0, 4000), main = "Portfolio Value", xlab = "Month")
lines(port_ci[2,], col = "red", lty = 2)
lines(port_ci[1,], col = "red", lty = 2)
portfolio_df <- as_tibble(portfolio_value) %>%
mutate(success = ifelse(.[[ncol(.)]] > 0, TRUE, FALSE))
mean(portfolio_df$success)
withdrawal_amt <- starting_value*(.04/12)
T <- ncol(equity_gross)
n_sims <- nrow(equity_gross)
portfolio_value <- matrix(NA, nrow = n_sims, ncol = T)
# Period 1
portfolio_value[, 1] <- (starting_value - price_level[, 1]*withdrawal_amt) * equity_gross[, 1]
# Remaining periods
for (t in 2:T) {
portfolio_value[, t] <- (portfolio_value[, t-1] - price_level[, t]*withdrawal_amt) * equity_gross[, t]
}
portfolio_value <- pmax(portfolio_value, 0)
port_avg <- colMeans(portfolio_value)
port_ci <- apply(portfolio_value, 2, quantile, probs = c(.05, .95))
plot(port_avg, type = "l", ylim = c(0, 4000), main = "Portfolio Value", xlab = "Month")
lines(port_ci[2,], col = "red", lty = 2)
lines(port_ci[1,], col = "red", lty = 2)
portfolio_df <- as_tibble(portfolio_value) %>%
mutate(success = ifelse(.[[ncol(.)]] > 0, TRUE, FALSE))
mean(portfolio_df$success)
withdrawal_amt <- starting_value*(.05/12)
T <- ncol(equity_gross)
n_sims <- nrow(equity_gross)
portfolio_value <- matrix(NA, nrow = n_sims, ncol = T)
# Period 1
portfolio_value[, 1] <- (starting_value - price_level[, 1]*withdrawal_amt) * equity_gross[, 1]
# Remaining periods
for (t in 2:T) {
portfolio_value[, t] <- (portfolio_value[, t-1] - price_level[, t]*withdrawal_amt) * equity_gross[, t]
}
portfolio_value <- pmax(portfolio_value, 0)
port_avg <- colMeans(portfolio_value)
port_ci <- apply(portfolio_value, 2, quantile, probs = c(.05, .95))
plot(port_avg, type = "l", ylim = c(0, 4000), main = "Portfolio Value", xlab = "Month")
lines(port_ci[2,], col = "red", lty = 2)
lines(port_ci[1,], col = "red", lty = 2)
portfolio_df <- as_tibble(portfolio_value) %>%
mutate(success = ifelse(.[[ncol(.)]] > 0, TRUE, FALSE))
mean(portfolio_df$success)
withdrawal_amt <- starting_value*(.03/12)
T <- ncol(equity_gross)
n_sims <- nrow(equity_gross)
portfolio_value <- matrix(NA, nrow = n_sims, ncol = T)
# Period 1
portfolio_value[, 1] <- (starting_value - price_level[, 1]*withdrawal_amt) * equity_gross[, 1]
# Remaining periods
for (t in 2:T) {
portfolio_value[, t] <- (portfolio_value[, t-1] - price_level[, t]*withdrawal_amt) * equity_gross[, t]
}
portfolio_value <- pmax(portfolio_value, 0)
port_avg <- colMeans(portfolio_value)
port_ci <- apply(portfolio_value, 2, quantile, probs = c(.05, .95))
plot(port_avg, type = "l", ylim = c(0, 4000), main = "Portfolio Value", xlab = "Month")
lines(port_ci[2,], col = "red", lty = 2)
lines(port_ci[1,], col = "red", lty = 2)
portfolio_df <- as_tibble(portfolio_value) %>%
mutate(success = ifelse(.[[ncol(.)]] > 0, TRUE, FALSE))
mean(portfolio_df$success)
View(portfolio_value)
sim_means
price_level[,480]
price_level[,n_years*12]
dollar_value <- cumprod(exp(cpi_sim))
dollar_value
equity_gross <- exp(equity_sim)
plot(equity_gross, type = "l")
mean(equity_gross)
starting_value <- 100
for (i in 1:length(portfolio_value)) {
if (i ==1) {
portfolio_value[i] <- (starting_value - dollar_value[i])*equity_gross[i]
}
else {
portfolio_value[i] <- (portfolio_value[i-1] - dollar_value[i])*equity_gross[i]
}
}
plot(portfolio_value, type = "l")
dollar_value <- cumprod(exp(cpi_sim))
equity_gross <- exp(equity_sim)
plot(equity_gross, type = "l")
mean(equity_gross)
starting_value <- 100
portfolio_value <- rep(NA, length(dollar_value))
for (i in 1:length(portfolio_value)) {
if (i ==1) {
portfolio_value[i] <- (starting_value - dollar_value[i])*equity_gross[i]
}
else {
portfolio_value[i] <- (portfolio_value[i-1] - dollar_value[i])*equity_gross[i]
}
}
plot(portfolio_value, type = "l")
dollar_value <- cumprod(exp(cpi_sim))
equity_gross <- exp(equity_sims)
rowMeans(equity_gross)
matrix_cpi_sims <- do.call(rbind, cpi_sims)
price_level <- t(apply(matrix_cpi_sims, 1, function(x) cumprod(exp(x))))
price_level[,n_years*12]
# Set starting portfolio value
starting_value <- 100
withdrawal_amt <- starting_value*(.03/12)
T <- ncol(equity_gross)
n_sims <- nrow(equity_gross)
portfolio_value <- matrix(NA, nrow = n_sims, ncol = T)
# Period 1
portfolio_value[, 1] <- (starting_value - price_level[, 1]*withdrawal_amt) * equity_gross[, 1]
# Remaining periods
for (t in 2:T) {
portfolio_value[, t] <- (portfolio_value[, t-1] - price_level[, t]*withdrawal_amt) * equity_gross[, t]
}
portfolio_value <- pmax(portfolio_value, 0)
withdrawal_amt <- starting_value*(.03/12)
T <- ncol(equity_gross)
n_sims <- nrow(equity_gross)
portfolio_value <- matrix(NA, nrow = n_sims, ncol = T)
# Period 1
portfolio_value[, 1] <- (starting_value - price_level[, 1]*withdrawal_amt) * equity_gross[, 1]
# Remaining periods
for (t in 2:T) {
portfolio_value[, t] <- (portfolio_value[, t-1] - price_level[, t]*withdrawal_amt) * equity_gross[, t]
}
portfolio_value <- pmax(portfolio_value, 0)
port_avg <- colMeans(portfolio_value)
port_ci <- apply(portfolio_value, 2, quantile, probs = c(.05, .95))
plot(port_avg, type = "l", ylim = c(0, 4000), main = "Portfolio Value", xlab = "Month")
lines(port_ci[2,], col = "red", lty = 2)
lines(port_ci[1,], col = "red", lty = 2)
portfolio_df <- as_tibble(portfolio_value) %>%
mutate(success = ifelse(.[[ncol(.)]] > 0, TRUE, FALSE))
mean(portfolio_df$success)
# Set starting portfolio value
starting_value <- 100
withdrawal_amt <- starting_value*(.07/12)
T <- ncol(equity_gross)
n_sims <- nrow(equity_gross)
portfolio_value <- matrix(NA, nrow = n_sims, ncol = T)
# Period 1
portfolio_value[, 1] <- (starting_value - price_level[, 1]*withdrawal_amt) * equity_gross[, 1]
# Remaining periods
for (t in 2:T) {
portfolio_value[, t] <- (portfolio_value[, t-1] - price_level[, t]*withdrawal_amt) * equity_gross[, t]
}
portfolio_value <- pmax(portfolio_value, 0)
port_avg <- colMeans(portfolio_value)
port_ci <- apply(portfolio_value, 2, quantile, probs = c(.05, .95))
plot(port_avg, type = "l", ylim = c(0, 4000), main = "Portfolio Value", xlab = "Month")
lines(port_ci[2,], col = "red", lty = 2)
lines(port_ci[1,], col = "red", lty = 2)
portfolio_df <- as_tibble(portfolio_value) %>%
mutate(success = ifelse(.[[ncol(.)]] > 0, TRUE, FALSE))
mean(portfolio_df$success)
# Set starting portfolio value
starting_value <- 100
withdrawal_amt <- starting_value*(.1/12)
T <- ncol(equity_gross)
n_sims <- nrow(equity_gross)
portfolio_value <- matrix(NA, nrow = n_sims, ncol = T)
# Period 1
portfolio_value[, 1] <- (starting_value - price_level[, 1]*withdrawal_amt) * equity_gross[, 1]
# Remaining periods
for (t in 2:T) {
portfolio_value[, t] <- (portfolio_value[, t-1] - price_level[, t]*withdrawal_amt) * equity_gross[, t]
}
portfolio_value <- pmax(portfolio_value, 0)
port_avg <- colMeans(portfolio_value)
port_ci <- apply(portfolio_value, 2, quantile, probs = c(.05, .95))
plot(port_avg, type = "l", ylim = c(0, 4000), main = "Portfolio Value", xlab = "Month")
lines(port_ci[2,], col = "red", lty = 2)
lines(port_ci[1,], col = "red", lty = 2)
portfolio_df <- as_tibble(portfolio_value) %>%
mutate(success = ifelse(.[[ncol(.)]] > 0, TRUE, FALSE))
mean(portfolio_df$success)
?colMeans
