plot_yield_curve(var_sim, models)
plot_yield_curve(var_sim, models)
plot_yield_curve(var_sim, models)
plot_yield_curve(var_sim, models)
plot_yield_curve(var_sim, models)
plot_yield_curve(var_sim, models)
plot_yield_curve(var_sim, models)
library(gganimate)
yield_long <- full_ir %>%
select(date, three_month, one_year, two_year, three_year, five_year, seven_year, ten_year, thirty_year) %>%
pivot_longer(
cols = -date,
names_to = "maturity",
values_to = "yield"
) %>%
mutate(
maturity_years = case_when(
maturity == "three_month" ~ 0.25,
maturity == "one_year" ~ 1,
maturity == "two_year" ~ 2,
maturity == "three_year" ~ 3,
maturity == "five_year" ~ 5,
maturity == "seven_year" ~ 7,
maturity == "ten_year" ~ 10,
maturity == "thirty_year" ~ 30
)
)
yield_long <- full_ir %>%
dplyr::select(date, three_month, one_year, two_year, three_year, five_year, seven_year, ten_year, thirty_year) %>%
pivot_longer(
cols = -date,
names_to = "maturity",
values_to = "yield"
) %>%
mutate(
maturity_years = case_when(
maturity == "three_month" ~ 0.25,
maturity == "one_year" ~ 1,
maturity == "two_year" ~ 2,
maturity == "three_year" ~ 3,
maturity == "five_year" ~ 5,
maturity == "seven_year" ~ 7,
maturity == "ten_year" ~ 10,
maturity == "thirty_year" ~ 30
)
)
p <- ggplot(yield_long, aes(x = maturity_years, y = yield, group = date)) +
geom_line(color = "steelblue", size = 1) +
geom_point(color = "darkred", size = 2) +
scale_x_continuous(breaks = c(0.25, 1, 2, 3, 5, 7, 10, 30)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = 'US Yield Curve on: {frame_time}',
x = 'Maturity (Years)',
y = 'Yield',
caption = 'Source: FRED'
) +
theme_minimal(base_size = 14) +
transition_time(date) +
ease_aes('linear')
p <- ggplot(yield_long, aes(x = maturity_years, y = yield, group = date)) +
geom_line(color = "steelblue") +
geom_point(color = "darkred") +
scale_x_continuous(breaks = c(0.25, 1, 2, 3, 5, 7, 10, 30)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = 'US Yield Curve on: {frame_time}',
x = 'Maturity (Years)',
y = 'Yield',
caption = 'Source: FRED'
) +
theme_minimal(base_size = 14) +
transition_time(date) +
ease_aes('linear')
animate(p, width = 800, height = 500, fps = 15, duration = 10, renderer = gifski_renderer("yield_curve.gif"))
p <- ggplot(yield_long, aes(x = maturity_years, y = yield, group = date)) +
geom_smooth(color = "blue", se = FALSE) +
geom_point() +
scale_x_continuous(breaks = c(0.25, 1, 2, 3, 5, 7, 10, 30)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = 'US Yield Curve on: {frame_time}',
x = 'Time',
y = 'Yield',
) +
theme_minimal(base_size = 14) +
transition_time(date) +
ease_aes('linear')
animate(p, width = 800, height = 500, fps = 15, duration = 20, renderer = gifski_renderer("yield_curve.gif"))
?animate
p <- ggplot(yield_long, aes(x = maturity_years, y = yield, group = date)) +
geom_smooth(color = "blue", se = FALSE) +
geom_point() +
scale_x_continuous(breaks = c(0.25, 1, 2, 3, 5, 7, 10, 30)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = 'US Yield Curve on: {frame_time}',
x = 'Time',
y = 'Yield',
) +
theme_minimal(base_size = 14) +
transition_time(date) +
ease_aes('linear')
animate(p, width = 800, height = 500, fps = 25, duration = 20, renderer = gifski_renderer("yield_curve.gif"))
animate(p, width = 800, height = 500, duration = 35, renderer = gifski_renderer("yield_curve.gif"))
?animate
animate(p, width = 800, height = 500, fps = 5, renderer = gifski_renderer("yield_curve.gif"))
View(yield_long)
?transition_time
?animate
animate(p, width = 800, height = 500,renderer = gifski_renderer("yield_curve.gif"))
View(full_ir)
p <- ggplot(yield_long, aes(x = maturity_years, y = yield, group = date)) +
geom_smooth(color = "blue", se = FALSE) +
geom_point() +
scale_x_continuous(breaks = c(0.25, 1, 2, 3, 5, 7, 10, 30)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = 'US Yield Curve on: {date}',
x = 'Time',
y = 'Yield',
) +
theme_minimal(base_size = 14) +
transition_time(date) +
ease_aes('linear')
animate(p, width = 800, height = 500,renderer = gifski_renderer("yield_curve.gif"))
View(yield_long)
?transition_time
?ease_aes
p <- ggplot(yield_long, aes(x = maturity_years, y = yield, group = date)) +
geom_smooth(color = "blue", se = FALSE) +
geom_point() +
scale_x_continuous(breaks = c(0.25, 1, 2, 3, 5, 7, 10, 30)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = 'US Yield Curve on: {date}',
x = 'Time',
y = 'Yield',
) +
theme_minimal(base_size = 14) +
transition_states(date) +
ease_aes('linear')
animate(p, width = 800, height = 500,renderer = gifski_renderer("yield_curve.gif"))
p <- ggplot(yield_long, aes(x = maturity_years, y = yield, group = date)) +
geom_smooth(color = "blue", se = FALSE) +
geom_point() +
scale_x_continuous(breaks = c(0.25, 1, 2, 3, 5, 7, 10, 30)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = 'US Yield Curve on: {frame+_time}',
x = 'Time',
y = 'Yield',
) +
theme_minimal(base_size = 14) +
transition_states(date) +
ease_aes('linear')
animate(p, width = 800, height = 500,renderer = gifski_renderer("yield_curve.gif"))
p <- ggplot(yield_long, aes(x = maturity_years, y = yield, group = date)) +
geom_smooth(color = "blue", se = FALSE) +
geom_point() +
scale_x_continuous(breaks = c(0.25, 1, 2, 3, 5, 7, 10, 30)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = 'US Yield Curve on: {frame_time}',
x = 'Time',
y = 'Yield',
) +
theme_minimal(base_size = 14) +
transition_states(date) +
ease_aes('linear')
animate(p, width = 800, height = 500,renderer = gifski_renderer("yield_curve.gif"))
p <- ggplot(yield_long, aes(x = maturity_years, y = yield, group = date)) +
geom_smooth(color = "blue", se = FALSE) +
geom_point() +
scale_x_continuous(breaks = c(0.25, 1, 2, 3, 5, 7, 10, 30)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = 'US Yield Curve on: {closest_state}',
x = 'Time',
y = 'Yield',
) +
theme_minimal(base_size = 14) +
transition_states(
states = date,
transition_length = 1,
state_length = 1,
wrap = FALSE
)
ease_aes('linear')
p <- ggplot(yield_long, aes(x = maturity_years, y = yield, group = date)) +
geom_smooth(color = "blue", se = FALSE) +
geom_point() +
scale_x_continuous(breaks = c(0.25, 1, 2, 3, 5, 7, 10, 30)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = 'US Yield Curve on: {closest_state}',
x = 'Time',
y = 'Yield',
) +
theme_minimal(base_size = 14) +
transition_states(
states = date,
transition_length = 1,
state_length = 1,
wrap = FALSE
) +
ease_aes('linear')
animate(p, width = 800, height = 500,renderer = gifski_renderer("yield_curve.gif"))
p <- ggplot(yield_long, aes(x = maturity_years, y = yield, group = date)) +
geom_smooth(color = "blue", se = FALSE) +
geom_point() +
scale_x_continuous(breaks = c(0.25, 1, 2, 3, 5, 7, 10, 30)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = 'US Yield Curve on: {closest_state}',
x = 'Time',
y = 'Yield',
) +
theme_minimal(base_size = 14) +
transition_states(
states = date,
transition_length = 1,
state_length = 2,
wrap = FALSE
) +
ease_aes('linear')
animate(p, width = 800, height = 500,renderer = gifski_renderer("yield_curve.gif"))
p <- ggplot(yield_long, aes(x = maturity_years, y = yield)) +
geom_smooth(color = "blue", se = FALSE) +
geom_point() +
scale_x_continuous(breaks = c(0.25, 1, 2, 3, 5, 7, 10, 30)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = 'US Yield Curve on: {closest_state}',
x = 'Time',
y = 'Yield',
) +
theme_minimal(base_size = 14) +
transition_states(
states = date,
transition_length = 1,
state_length = 2,
wrap = FALSE
) +
ease_aes('linear')
animate(p, width = 800, height = 500,renderer = gifski_renderer("yield_curve.gif"))
p
p <- ggplot(yield_long, aes(x = maturity_years, y = yield)) +
geom_smooth(color = "blue", se = FALSE) +
geom_point() +
scale_x_continuous(breaks = c(0.25, 1, 2, 3, 5, 7, 10, 30)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = 'US Yield Curve on: {closest_state}',
x = 'Time',
y = 'Yield',
) +
theme_minimal(base_size = 14) +
transition_time(
states = date
) +
ease_aes('linear')
p <- ggplot(yield_long, aes(x = maturity_years, y = yield)) +
geom_smooth(color = "blue", se = FALSE) +
geom_point() +
scale_x_continuous(breaks = c(0.25, 1, 2, 3, 5, 7, 10, 30)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = 'US Yield Curve on: {closest_state}',
x = 'Time',
y = 'Yield',
) +
theme_minimal(base_size = 14) +
transition_time(
date
) +
ease_aes('linear')
p
p <- ggplot(yield_long, aes(x = maturity_years, y = yield)) +
geom_smooth(color = "blue", se = FALSE) +
geom_point() +
scale_x_continuous(breaks = c(0.25, 1, 2, 3, 5, 7, 10, 30)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = 'US Yield Curve on: {closest_state}',
x = 'Time',
y = 'Yield',
) +
theme_minimal(base_size = 14) +
transition_states(
date,
state_length = 2
) +
ease_aes('linear')
p
p <- ggplot(yield_long, aes(x = maturity_years, y = yield)) +
geom_smooth(color = "blue", se = FALSE) +
geom_point() +
scale_x_continuous(breaks = c(0.25, 1, 2, 3, 5, 7, 10, 30)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = 'US Yield Curve on: {current_frame}',
x = 'Time',
y = 'Yield',
) +
theme_minimal(base_size = 14) +
transition_manual(
date,
) +
ease_aes('linear')
animate(p, width = 800, height = 500,renderer = gifski_renderer("yield_curve.gif"))
animate(p, width = 800, height = 500,renderer = ffmpeg_renderer())
?ffmpeg_renderer
animate(p, width = 800, height = 500,renderer = ffmpeg_renderer("yield_curve"))
animate(p, width = 800, height = 500,renderer = ffmpeg_renderer("yield_curve.webm"))
yield_long |> count(date)
yield_long |> count(date) |> View()
yield_long <- full_ir %>%
dplyr::select(date, three_month, one_year, two_year, three_year, five_year, seven_year, ten_year, thirty_year) %>%
pivot_longer(
cols = -date,
names_to = "maturity",
values_to = "yield"
) %>%
mutate(
maturity_years = case_when(
maturity == "three_month" ~ 0.25,
maturity == "one_year" ~ 1,
maturity == "two_year" ~ 2,
maturity == "three_year" ~ 3,
maturity == "five_year" ~ 5,
maturity == "seven_year" ~ 7,
maturity == "ten_year" ~ 10,
maturity == "thirty_year" ~ 30
)
) |>
filter(date > "2020-01-01")
p <- ggplot(yield_long, aes(x = maturity_years, y = yield)) +
geom_smooth(color = "blue", se = FALSE) +
geom_point() +
scale_x_continuous(breaks = c(0.25, 1, 2, 3, 5, 7, 10, 30)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = 'US Yield Curve on: {current_frame}',
x = 'Time',
y = 'Yield',
) +
theme_minimal(base_size = 14) +
transition_manual(
date,
) +
ease_aes('linear')
p
p <- ggplot(yield_long, aes(x = maturity_years, y = yield)) +
geom_smooth(color = "blue", se = FALSE) +
geom_point() +
scale_x_continuous(breaks = c(0.25, 1, 2, 3, 5, 7, 10, 30)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = 'US Yield Curve on: {current_frame}',
x = 'Time',
y = 'Yield',
) +
theme_minimal(base_size = 14) +
transition_manual(
date,
) +
ease_aes('linear')
animate(p, width = 800, height = 500, nframes = length(unique(yield_long$date)), renderer = gifski_renderer("yield_curve.gif"))
yield_long <- full_ir %>%
dplyr::select(date, three_month, one_year, two_year, three_year, five_year, seven_year, ten_year, thirty_year) %>%
pivot_longer(
cols = -date,
names_to = "maturity",
values_to = "yield"
) %>%
mutate(
maturity_years = case_when(
maturity == "three_month" ~ 0.25,
maturity == "one_year" ~ 1,
maturity == "two_year" ~ 2,
maturity == "three_year" ~ 3,
maturity == "five_year" ~ 5,
maturity == "seven_year" ~ 7,
maturity == "ten_year" ~ 10,
maturity == "thirty_year" ~ 30
)
)
p <- ggplot(yield_long, aes(x = maturity_years, y = yield)) +
geom_smooth(color = "blue", se = FALSE) +
geom_point() +
scale_x_continuous(breaks = c(0.25, 1, 2, 3, 5, 7, 10, 30)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = 'US Yield Curve on: {current_frame}',
x = 'Time',
y = 'Yield',
) +
theme_minimal(base_size = 14) +
transition_manual(
date,
) +
ease_aes('linear')
animate(p, width = 800, height = 500, nframes = length(unique(yield_long$date)), renderer = gifski_renderer("yield_curve.gif"))
animate(p, width = 800, height = 500,nframes = length(unique(yield_long$date)), renderer = ffmpeg_renderer("~/Documents/GradSchool/AnnuityProject/yield_curve.webm"))
animate(p, width = 800, height = 500,nframes = length(unique(yield_long$date)), renderer = ffmpeg_renderer("yield_curve.webm"))
animate(p, width = 800, height = 500,nframes = length(unique(yield_long$date)), renderer = ffmpeg_renderer("yield_curve.mp4"))
library(duckdb)
library(DBI)
con <- dbConnect(duckdb::duckdb())
dbExecute(con, "LOAD 'motherduck'")
dbExecute(con, "ATTACH 'md:'")
dbExecute(con, "USE gff")
res <- dbGetQuery(con, "SHOW DATABASES")
print(res)
# view tables in the database
res <- dbGetQuery(con, "SHOW TABLES")
print(res)
library(dbplyr)
tbl(con, "wages") |> head() |> collect()
tbl(con, "wages") |> filter(hourly_rate > 20) |> collect()
install.packages("blob")
tbl(con, "wages") |> filter(hourly_rate > 20) |> collect()
harvest_client_ref <- readRDS("~/Documents/Work/GFF/MarginsProject/imports/harvest/harvest_ref.rds")
harvest_client_ref <- readRDS("~/Documents/Work/GFF/MarginsProject/imports/harvest/harvest_ref.rds")
dbWriteTable(con, "HarvestClientRef", harvest_client_ref, overwrite = TRUE)
library(duckdb)
library(DBI)
library(dbplyr)
con <- dbConnect(duckdb::duckdb())
dbExecute(con, "LOAD 'motherduck'")
dbExecute(con, "ATTACH 'md:'")
dbExecute(con, "USE gff")
res <- dbGetQuery(con, "SHOW DATABASES")
print(res)
harvest_client_ref <- readRDS("~/Documents/Work/GFF/MarginsProject/imports/harvest/harvest_ref.rds")
dbWriteTable(con, "HarvestClientRef", harvest_client_ref, overwrite = TRUE)
# view tables in the database
res <- dbGetQuery(con, "SHOW TABLES")
print(res)
quickbooks_client_ref <- readRDS("~/Documents/Work/GFF/MarginsProject/imports/quickbooks/quickbooks_ref.rds")
dbWriteTable(con, "QuickBooksClientRef", quickbooks_client_ref, overwrite = TRUE)
initial_hours <- readRDS("~/Documents/Work/GFF/MarginsProject/imports/harvest/time_entries.rds")
View(initial_hours)
hours <- initial_hours |> select(id = id_1, spent_date, hours, notes, billable, employee, client, project, task)
hours <- initial_hours |> dplyr::select(id = id_1, spent_date, hours, notes, billable, employee, client, project, task)
hours <- initial_hours |> dplyr::select(id = id_1, spent_date, hours, notes, billable, employee, client, project, task, final_client)
View(initial_hours)
hours <- initial_hours |> dplyr::select(id = id_1, spent_date, hours, notes, billable, employee, client, project, task, final_client)
dbWriteTable(con, "Hours", hours, overwrite = TRUE)
initial_invoices <- readRDS("~/Documents/Work/GFF/MarginsProject/imports/quickbooks/invoices.rds")
initial_invoices |> count(DetailType)
invoices <- initial_invoices |> janitor::clean_names() |> select(id, txn_date, month, customer_ref, description, amt, due_date, final_client)
invoices <- initial_invoices |> janitor::clean_names() |> dplyr::select(id, txn_date, month, customer_ref, description, amt, due_date, final_client)
dbWriteTable(con, "Invoices", invoices, overwrite = TRUE)
invoices <- initial_invoices |> janitor::clean_names() |>
dplyr::select(id, txn_date, month, customer_ref, description, amt, due_date, final_client) |>
mutate(txn_date = as.Date(txn_date),
month = as.Date(month),
due_date = as.Date(due_date),
id = as.numeric(id))
dbWriteTable(con, "Invoices", invoices, overwrite = TRUE)
invoices <- initial_invoices |> janitor::clean_names() |>
dplyr::select(id, txn_date, month, customer_ref, description, amt, due_date, final_client) |>
mutate(txn_date = as.Date(txn_date),
month = as.Date(month),
due_date = as.Date(due_date),
id = as.numeric(id))
dbWriteTable(con, "Invoices", invoices, overwrite = TRUE)
invoices <- initial_invoices |> janitor::clean_names() |>
dplyr::select(id, txn_date, month, customer_ref, description, amt, due_date, final_client) |>
mutate(id = as.numeric(id),
txn_date = as.Date(txn_date),
month = as.Date(month),
due_date = as.Date(due_date))
invoices$final_client
invoices <- initial_invoices |> janitor::clean_names() |>
dplyr::select(id, txn_date, month, customer_ref, description, amt, due_date, final_client) |>
mutate(id = as.numeric(id),
txn_date = as.Date(txn_date),
month = as.Date(month),
due_date = as.Date(due_date))
dbWriteTable(con, "Invoices", invoices, overwrite = TRUE)
dbWriteTable(con, "Invoices", invoices, overwrite = TRUE)
View(invoices)
invoices <- initial_invoices |> as.tibble() |>  janitor::clean_names() |>
dplyr::select(id, txn_date, month, customer_ref, description, amt, due_date, final_client) |>
mutate(id = as.numeric(id),
txn_date = as.Date(txn_date),
month = as.Date(month),
due_date = as.Date(due_date))
invoices <- initial_invoices |> as_tibble() |>  janitor::clean_names() |>
dplyr::select(id, txn_date, month, customer_ref, description, amt, due_date, final_client) |>
mutate(id = as.numeric(id),
txn_date = as.Date(txn_date),
month = as.Date(month),
due_date = as.Date(due_date))
invoices <- initial_invoices |> as_tibble() |>  janitor::clean_names() |>
dplyr::select(id, txn_date, month, customer_ref, description, amt, due_date, final_client) |>
mutate(id = as.numeric(id),
txn_date = as.Date(txn_date),
month = as.Date(month),
due_date = as.Date(due_date))
dbWriteTable(con, "Invoices", invoices, overwrite = TRUE)
invoices <- initial_invoices |> as_tibble() |>  janitor::clean_names() |>
dplyr::select(id, txn_date, month, customer_ref, description, amt, due_date, final_client) |>
mutate(id = as.numeric(id),
txn_date = as.Date(txn_date),
month = as.Date(month),
due_date = as.Date(due_date))
dbWriteTable(con, "Invoices", invoices, overwrite = TRUE)
test <- tbl(con, "Invoices") |> head() |> collect()
